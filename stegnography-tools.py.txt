from tkinter import *
from tkinter import filedialog
from tkinter import messagebox
import tkinter as tk
from PIL import Image, ImageTk
from stegano import lsb
import unittest

root = Tk()
root.title("Steganography - Hide a Secret Text Message in an Image")
root.geometry("700x500+250+180")
root.resizable(False, False)
root.configure(bg="#006400")

# Icon
image_icon = PhotoImage(file=r"C:\Users\gopal\OneDrive\Pictures\logo.jpg.jpg")
root.iconphoto(False, image_icon)

# Logo
logo = PhotoImage(file=r"C:\Users\gopal\OneDrive\Pictures\logo.png.png")

Label(root, image=logo, bg="#006400").place(x=10, y=0)
Label(root, text="STEGANOGRAPHY TOOL", bg="#006400", fg="white", font="arial 25 bold").place(x=100, y=20)

# First Frame
f = Frame(root, bd=3, bg="black", width=340, height=280, relief=GROOVE)
f.place(x=10, y=80)

lbl = Label(f, bg="black")
lbl.place(x=40, y=10)

# Second Frame
frame2 = Frame(root, bd=3, width=340, height=280, bg="white", relief=GROOVE)
frame2.place(x=350, y=80)

text1 = Text(frame2, font="Roboto 20", bg="white", fg="black", relief=GROOVE, wrap=WORD)
text1.place(x=0, y=0, width=320, height=295)

scrollbar1 = Scrollbar(frame2)
scrollbar1.place(x=320, y=0, height=300)
scrollbar1.configure(command=text1.yview)
text1.configure(yscrollcommand=scrollbar1.set)

# Third Frame
frame3 = Frame(root, bd=3, bg="#006400", width=330, height=100, relief=GROOVE)
frame3.place(x=10, y=370)

scrollbar2 = Scrollbar(frame3)
scrollbar2.place(x=320, y=0, height=300)
scrollbar2.configure(command=text1.yview)
text1.configure(yscrollcommand=scrollbar2.set)

# Open Image Button
def show_image():
    filename = filedialog.askopenfilename(initialdir="/", title="Select Image", filetypes=(("Image files", ".jpg *.jpeg *.png"), ("All files", ".*")))
    if filename:
        img = Image.open(filename)
        img = img.resize((300, 200), Image.ANTIALIAS)
        photo = ImageTk.PhotoImage(img)
        lbl.config(image=photo)
        lbl.image = photo

def save():
    filename = filedialog.asksaveasfilename(initialdir="/", title="Save Image", defaultextension=".png", filetypes=(("PNG files", ".png"), ("All files", ".*")))
    if filename:
        img = ImageTk.getimage(lbl.image)
        img.save(filename)
        messagebox.showinfo("Success", "Image saved successfully!")

Button(frame3, text="Open Image", width=10, height=2, font="arial 14 bold", command=show_image).place(x=20, y=30)
Button(frame3, text="Save Image", width=10, height=2, font="arial 14 bold", command=save).place(x=180, y=30)
Label(frame3, text="Picture, Image, PhotoFile", bg="#006400", fg="yellow").place(x=20, y=5)

# Fourth Frame
frame4 = Frame(root, bd=3, bg="#006400", width=330, height=100, relief=GROOVE)
frame4.place(x=360, y=370)

# Hide Data Button
def hide_data():
    text = text1.get("1.0", END).strip()
    if text:
        filename = filedialog.askopenfilename(initialdir="/", title="Select Image", filetypes=(("Image files", ".jpg *.jpeg *.png"), ("All files", ".*")))
        if filename:
            secret_image = lsb.hide(filename, text)
            save_filename = filedialog.asksaveasfilename(initialdir="/", title="Save Image", defaultextension=".png", filetypes=(("PNG files", ".png"), ("All files", ".*")))
            if save_filename:
                secret_image.save(save_filename)
                messagebox.showinfo("Success", "Data hidden in image successfully!")

# Show Data Button
def show_data():
    filename = filedialog.askopenfilename(initialdir="/", title="Select Image", filetypes=(("Image files", ".jpg *.jpeg *.png"), ("All files", ".*")))
    if filename:
        secret_text = lsb.reveal(filename)
        text1.delete("1.0", END)
        text1.insert(END, secret_text)

Button(frame4, text="Hide Data", width=10, height=2, font="arial 14 bold", command=hide_data).place(x=20, y=30)
Button(frame4, text="Show Data", width=10, height=2, font="arial 14 bold", command=show_data).place(x=180, y=30)
Label(frame4, text="Picture, Image, Photo File", bg="#006400", fg="yellow").place(x=20, y=5)

root.mainloop()


# The unit tests

class TestSteganography(unittest.TestCase):
    def test_hide_and_reveal_data(self):
        # Your test case for hiding and revealing data
        pass

    def test_show_image(self):
        # Your test case for showing the image
        pass

    def test_save_image(self):
        # Your test case for saving the image
        pass

if __name__ == "__main__":
    unittest.main()

